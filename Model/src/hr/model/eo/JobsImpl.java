package hr.model.eo;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 30 09:14:07 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        JobId,
        JobTitle,
        MinSalary,
        MaxSalary,
        Employees;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int MINSALARY = AttributesEnum.MinSalary.index();
    public static final int MAXSALARY = AttributesEnum.MaxSalary.index();
    public static final int EMPLOYEES = AttributesEnum.Employees.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobsImpl() {
    }

    /**
     * Gets the attribute value for JobId, using the alias name JobId.
     * @return the value of JobId
     */
    public String getJobId() {
        return (String) getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobId.
     * @param value value to set the JobId
     */
    public void setJobId(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for JobTitle, using the alias name JobTitle.
     * @return the value of JobTitle
     */
    public String getJobTitle() {
        return (String) getAttributeInternal(JOBTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobTitle.
     * @param value value to set the JobTitle
     */
    public void setJobTitle(String value) {
        setAttributeInternal(JOBTITLE, value);
    }

    /**
     * Gets the attribute value for MinSalary, using the alias name MinSalary.
     * @return the value of MinSalary
     */
    public Integer getMinSalary() {
        return (Integer) getAttributeInternal(MINSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinSalary.
     * @param value value to set the MinSalary
     */
    public void setMinSalary(Integer value) {
        setAttributeInternal(MINSALARY, value);
    }

    /**
     * Gets the attribute value for MaxSalary, using the alias name MaxSalary.
     * @return the value of MaxSalary
     */
    public Integer getMaxSalary() {
        return (Integer) getAttributeInternal(MAXSALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxSalary.
     * @param value value to set the MaxSalary
     */
    public void setMaxSalary(Integer value) {
        setAttributeInternal(MAXSALARY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getEmployees() {
        return (RowIterator) getAttributeInternal(EMPLOYEES);
    }

    /**
     * @param jobId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String jobId) {
        return new Key(new Object[] { jobId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hr.model.eo.Jobs");
    }
}

